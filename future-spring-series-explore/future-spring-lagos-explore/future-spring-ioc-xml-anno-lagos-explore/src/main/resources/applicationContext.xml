<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
				http://www.springframework.org/schema/beans/spring-beans.xsd
                http://www.springframework.org/schema/context
				http://www.springframework.org/schema/context/spring-context.xsd
				http://www.springframework.org/schema/aop
				http://www.springframework.org/schema/aop/spring-aop.xsd
">
    <!-- default-lazy-init="true" 当前beans全局延迟加载 -->

    <!--  引入外部资源文件  -->
    <context:property-placeholder location="classpath:jdbc.properties"/>

    <!--  开启注解扫描, base-package指定扫描包路径  -->
    <context:component-scan base-package="cn.locusc.spring.ioc.logos" />

    <!--  第三方jar中的bean定义在xml文件中  -->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
        <property name="driverClassName" value="${jdbc.driver}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
    </bean>

    <!--  lazy-init: 配置bean对象的延迟加载, true或者false, 默认为false(立即加载)  -->
    <bean id="lazyResult" class="cn.locusc.spring.ioc.logos.pojo.Result"
        lazy-init="true" init-method="initMethod"/>

    <bean id="companyBean" class="cn.locusc.spring.ioc.logos.factory.CompanyFactoryBean">
        <property name="companyInfo" value="阿里,杭州,10000" />
    </bean>



    <!--  进行aop相关的xml配置, 配置aop的过程其实就是把aop的相关术语落地  -->
    <!--  横切逻辑bean  -->
    <bean id="logUtils" class="cn.locusc.spring.ioc.logos.utils.LogUtils" />
    <!--  使用config标签表明开始aop配置, 在内部配置切面aspect  -->
    <!--  aspect = 切入点(锁定方法) + 方位点(锁定方法中的特殊时机) + 横切逻辑 -->
    <aop:config>
        <aop:aspect id="logAspect" ref="logUtils">
            <!--  切入点锁定我们感兴趣的方法, 使用aspectj语法表达式  -->
            <!--  (*) 必须有参数 -->
            <!--  (..) 可以没有参数 -->
            <!--  (* cn.locusc) 返回值不确定 -->
            <aop:pointcut id="ptl" expression="execution(* cn.locusc.spring.ioc.logos.service.impl.TransferServiceImpl.*(..))"/>
            <!--  方位信息,pointcut-ref关联切入点  -->
            <!--  aop:before前置增强/通知  -->
            <aop:before method="beforeMethod" pointcut-ref="ptl"/>
            <!--  aop:after最终通知,无论如何都执行  -->
            <aop:after method="afterMethod" pointcut-ref="ptl"/>
            <!--  aop:returning正常执行通知  -->
            <aop:after-returning method="successMethod" pointcut-ref="ptl" returning="retValue"/>
            <!--  aop:throwing异常通知  -->
            <aop:after-throwing method="exceptionMethod" pointcut-ref="ptl"/>
            <!--  aop:around环绕通知  -->
            <aop:around method="aroundMethod" pointcut-ref="ptl"/>
        </aop:aspect>
    </aop:config>
</beans>