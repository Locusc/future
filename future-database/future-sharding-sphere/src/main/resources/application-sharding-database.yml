spring:
  shardingsphere:
    datasource:
      names: ds0,ds1
      ds0:
        type: com.zaxxer.hikari.HikariDataSource
        driver-class-name: com.mysql.jdbc.Driver
        jdbc-url: jdbc:mysql://localhost:3306/locusc1
        username: root
        password: root
      ds1:
        type: com.zaxxer.hikari.HikariDataSource
        driver-class-name: com.mysql.jdbc.Driver
        jdbc-url: jdbc:mysql://localhost:3306/locusc2
        username: root
        password: root
    sharding:
      broadcast-tables: city # city表为广播表, 广播表在每一个节点都会存在并且是相同的数据
      tables:
        position:
          database-strategy:
            inline:
              sharding-column: id
              algorithm-expression: ds$->{id % 2}
          key-generator:
            column: id
            type: CustomKeyGenerator
        position_detail: # position_detail为垂直拆分过后的表
          database-strategy:
            inline:
              sharding-column: pid
              algorithm-expression: ds$->{pid % 2}
          key-generator:
            column: id
            type: SNOWFLAKE
        city:
          key-generator:
            column: id
            type: SNOWFLAKE
        b_order:
          database-strategy:
            inline:
              sharding-column: company_id
              algorithm-expression: ds$->{company_id % 2}
          table-strategy:
            inline:
              sharding-column: id
              algorithm-expression: b_order${id % 2}
          actual-data-nodes: ds${0..1}.b_order${0..1}
          key-generator:
            column: id
            type: SNOWFLAKE



