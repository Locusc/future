saga.actuator.executor.size=16
saga.actuator.transaction.max.retries=8
saga.actuator.compensation.max.retries=4
saga.actuator.transaction.retry.delay.milliseconds=1000
saga.actuator.compensation.retry.delay.milliseconds=2000
#saga.actuator.recovery.policy=BackwardRecovery
saga.persistence.enabled=false

# saga.persistence.ds.url=jdbc:mysql://localhost:3306/saga
# saga.persistence.ds.username=root
# saga.persistence.ds.password=
# saga.persistence.ds.connection.timeout.mi:lliseconds=30000
# saga.persistence.ds.idle.timeout.milliseconds=60000
# saga.persistence.ds.max.life.time.milliseconds=1800000
# saga.persistence.ds.max.pool.size=32
# saga.persistence.ds.min.pool.size=4
# saga.persistence.ds.maintenance.interval.milliseconds=29999

# Saga可以通过在项目的classpath中添加 saga.properties 来定制化Saga事务的配置项.配置项的属性及说明如下:
# saga.actuator.executor.size=5
# 使用的线程池大小
# saga.actuator.transaction.max.retries=5
# 失败SQL的最大重试次数
# saga.actuator.compensation.max.retries=5
# 失败SQL的最大尝试补偿次数
# saga.actuator.transaction.retry.delay.milliseconds=5000
# 失败SQL的重试间隔,单位毫秒
# saga.actuator.compensation.retry.delay.milliseconds=3000
# 失败SQL的补偿间隔,单位毫秒
# saga.persistence.enabled=false
# 是否对日志进行持久化
# saga.persistence.ds.url=
# 无事务日志数据库JDBC连接
# saga.persistence.ds.username=
# 无事务日志数据库用户名
# saga.persistence.ds.password=
# 无事务日志数据库密码
# saga.persistence.ds.max.pool.size=50
# 事务日志连接池最大连接数
# saga.persistence.ds.min.pool.size=1
# 事务日志连接池最小连接数(无限制)
# saga.persistence.ds.max.life.time.milliseconds=0
# 事务日志连接池最大存活时间,单位毫秒
# saga.persistence.ds.idle.timeout.milliseconds=60 * 1000
# 事务日志连接池空闲回收时间,单位毫秒
# saga.persistence.ds.connection.timeout.milliseconds=30 * 1000
# 事务日志连接池超时时间,单位毫秒