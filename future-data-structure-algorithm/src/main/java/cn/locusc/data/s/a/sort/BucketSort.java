package cn.locusc.data.s.a.sort;

/**
 * @author Jay
 * 桶排序(找出最大值和最小值, 根据这个范围划分桶的数量
 * 遍历元素, 找到每个元素属于哪一个桶, 每个桶分别使用归并或者快速排序,
 * 最后输出每个排好顺序的桶)
 * 基数排序和计数排序是桶排序的特殊情况
 *
 * 1.求最大值最小值n
 * 2.桶初始化k
 * 3.遍历装桶n
 * 4.桶内排序n/k*lg(n/k)*k
 * 5.结果输出n
 * 6. 3n + k + n/k*lg(n/k)*k = 3n + k + n*lg(n/k) 约等于 n + k
 * 7.最坏n²(一个桶)
 * 8.最好为n(n个桶, 而且值排列均匀)
 *
 * 空间
 * 1.n+k
 * 2.但实际上空间做的好的话, 就只能用链表, 时间就做不到最好
 *
 * //todo 作业
 * 2021/12/26
 */
public class BucketSort {


}
